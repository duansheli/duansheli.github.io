<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s集群 on 断舍离的博客</title>
    <link>https://duansheli.github.io/categories/k8s%E9%9B%86%E7%BE%A4/</link>
    <description>Recent content in k8s集群 on 断舍离的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 27 Jun 2019 17:28:13 +0800</lastBuildDate>
    
	<atom:link href="https://duansheli.github.io/categories/k8s%E9%9B%86%E7%BE%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8s-外部访问ingress</title>
      <link>https://duansheli.github.io/2019/06/27/k8s-ingress-controller.html</link>
      <pubDate>Thu, 27 Jun 2019 17:28:13 +0800</pubDate>
      
      <guid>https://duansheli.github.io/2019/06/27/k8s-ingress-controller.html</guid>
      <description>对外暴露服务 通常使用ingress作为前置入口 那如何配置 ingress-controller 与外界通信？
LoadBalancer 如果有云厂商的LoadBalancer， 那自然方便
各云厂商的实现可能有所不同
但使用后效果 应该都是高可用的vip入口
其他方案 如果是自建的k8s集群
或者云厂商没有LoadBalancer
又或者不想用云厂商的LoadBalancer
那这个时候整，之间nodePort么
自建-LoadBalance 基于开源项目自建 LoadBalance</description>
    </item>
    
    <item>
      <title>k8s搭建集群3-异常解决</title>
      <link>https://duansheli.github.io/2018/01/03/k8s-cluster-setup-03.html</link>
      <pubDate>Thu, 03 Jan 2019 17:28:13 +0800</pubDate>
      
      <guid>https://duansheli.github.io/2018/01/03/k8s-cluster-setup-03.html</guid>
      <description>出错恢复 没遇到报错可以跳过
安装过程中可能有一些异常
查看所有的pod分布情况 kubectl get pods -n kube-system -o wide -l k8s-app=kubernetes-dashboard  查看失败的镜像
imageName=`kubectl describe -n kube-system pod -l k8s-app=kubernetes-dashboard | grep Image: | awk &#39;{print $2 }&#39; ` kubectl describe -n kube-system pod -l k8s-app=kubernetes-dashboard  某个pod的详情 kubectl describe pod -l k8s-app=kubernetes-dashboard -n kube-system  出错日志 kubectl logs `kubectl get pods -n kube-system -l k8s-app=kubernetes-dashboard -o name` -n kube-system  报错描述提到 addr cni0 failed to set bridge addr: &amp;ldquo;cni0&amp;rdquo; already has an IP address different from 10.</description>
    </item>
    
    <item>
      <title>k8s集群搭建-02</title>
      <link>https://duansheli.github.io/2019/01/02/k8s-cluster-setup-02.html</link>
      <pubDate>Wed, 02 Jan 2019 17:28:13 +0800</pubDate>
      
      <guid>https://duansheli.github.io/2019/01/02/k8s-cluster-setup-02.html</guid>
      <description>&lt;p&gt;k8s集群好了 再添加一些相关的组件&lt;br /&gt;
dashboard helm helm的webui&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>k8s集群搭建-01</title>
      <link>https://duansheli.github.io/2019/01/01/k8s-cluster-setup-01.html</link>
      <pubDate>Tue, 01 Jan 2019 17:28:13 +0800</pubDate>
      
      <guid>https://duansheli.github.io/2019/01/01/k8s-cluster-setup-01.html</guid>
      <description>1. 目标 通过虚拟机搭建一个kubernetes集群
共3个节点基于ubuntu
2. 组件安装规划  宿主机: win10 vmware-v15
ubuntu=v16.04.1
docker=v18.06
k8s=v1.12.6
3个虚拟机节点=master,node1,node2
系统镜像下载
 3. 安装系统环境  因为每个节点都需要安装docker kubeadm&amp;hellip;等软件 以及各种配置</description>
    </item>
    
  </channel>
</rss>